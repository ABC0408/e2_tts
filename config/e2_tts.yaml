seed_everything: 4444

data:
  class_path: rfwave.dataset.VocosDataModule
  init_args:
    train_params:
      filelist_path: /path/to/filelist.train
      sampling_rate: 24000
      batch_size: 1
      num_workers: 8
      task: e2e
      hop_length: 256
      padding: "center"
      phoneset: /path/to/phoneset.th
      min_context: 200
      segment: False
      max_duration: 560.
      quadratic_duration: 15.

    val_params:
      filelist_path: /path/to/filelist.valid
      sampling_rate: 24000
      batch_size: 1
      num_workers: 4
      task: e2e
      hop_length: 256
      padding: "center"
      phoneset: /path/to/phoneset.th
      min_context: 200
      segment: False
      max_duration: 640.
      quadratic_duration: 15.

model:
  class_path: rfwave.experiment_e2.VocosExp
  init_args:
    sample_rate: 24000
    initial_learning_rate: 1e-4
    num_warmup_steps: 20_000 # Optimizers warmup steps
    p_uncond: 0.1
    guidance_scale: 2.0

    feature_extractor:
      class_path: rfwave.feature_extractors.MelSpectrogramFeatures
      init_args:
        sample_rate: 24000
        n_fft: 1024
        hop_length: 256
        n_mels: 100
        padding: center

    backbone:
      class_path: rfwave.dit.DiTRFE2ETTSMultiTaskBackbone
      init_args:
        input_channels: 512
        output_channels: 100
        dim: 384
        intermediate_dim: 1152
        num_layers: 12
        num_heads: 6

    input_adaptor:
      class_path: rfwave.input.E2ECtxCharInputAdaptor
      init_args:
        embedding_dim: 512
        vocab_size: 100
        ctx_dim: 100
        num_layers: 4

trainer:
  check_val_every_n_epoch: 10
  logger:
    class_path: pytorch_lightning.loggers.WandbLogger
    init_args:
      project: e2_tts
      save_dir: logs-e2_tts
      name: e2_tts
  callbacks:
    - class_path: pytorch_lightning.callbacks.LearningRateMonitor
    - class_path: pytorch_lightning.callbacks.ModelSummary
      init_args:
        max_depth: 1
    - class_path: pytorch_lightning.callbacks.ModelCheckpoint
      init_args:
        monitor: val_loss
        filename: rfwave_checkpoint_{epoch}_{step}_{val_loss:.4f}
        save_top_k: 3
        save_last: true
    - class_path: rfwave.helpers.GradNormCallback

  # Lightning calculates max_steps across all optimizer steps (rather than number of batches)
  # This equals to 1M steps per generator and 1M per discriminator
  max_steps: 1_000_000
  # You might want to limit val batches when evaluating all the metrics, as they are time-consuming
  limit_val_batches: 10
  accelerator: gpu
  devices: [0]
  strategy: auto
  log_every_n_steps: 1000
  use_distributed_sampler: False
  precision: bf16-mixed

